@import 'utility';
@import 'typography';
@import 'icons';

:root {
    @each $key, $value in $colors {
        --color-#{$key}: #{$value};
    }
    @each $key, $value in $grid {
        --grid-break-#{$key}: #{$value};
    }
    @each $key, $value in $font-size {
        --font-size-#{$key}: #{$value};
    }
    @each $key, $value in $line-height {
        --line-height-#{$key}: #{$value};
    }
    @each $key, $value in $font-family {
        --font-family-#{$key}: #{$value};
    }
}

*,
*::before,
*::after {
    box-sizing: border-box;
}
html {
    height: 100%;
}

body {
    width: 100%;
    min-height: 100vh;
    overflow-x: hidden;
    color: var(--color-text-1);
    font-family: map-get($font-family, primary);
    line-height: map-get($line-height, md);
    position: relative;

    &::before {
        content: '';
        display: block;
        width: 100%;
        height: 8px;
        position: absolute;
        top: 0px;
        background: linear-gradient(to right, #3ac590, #c6396f);
    }
}

/*=============================================
=            pointer states            =
=============================================*/
a,
input,
textarea,
button,
label {
    cursor: pointer;

    &.disabled,
    &:disabled {
        cursor: not-allowed;
    }
}

/*=====  End of pointer states  ======*/

/*=============================================
=            links            =
=============================================*/
a {
    color: var(--color-text-link-1);
    text-decoration: none;
    font-weight: bold;

    &.g-link:not(.icon) {
        display: inline-block;
        position: relative;
        overflow: hidden;
        transition: transform 1s ease-out;
        line-height: inherit;
        vertical-align: bottom;
        box-shadow: inset 0px -2px 0px 0px var(--color-text-link-1);
        padding-bottom: 2px;

        &::before {
            content: '';
            width: 100%;
            height: 2px;
            position: absolute;
            left: 0;
            right: 0;
            bottom: 0;
            background: var(--color-text-link-1);
            transition: transform 0.4s ease-out;
            border-radius: 1px;
            filter: invert(1);
            transform: translateX(calc(-100% - 10px));
        }
        &:hover::before {
            transform: none;
        }
    }
}

/*=====  End of links  ======*/

/*=============================================
=            images            =
=============================================*/
img {
    display: inline-block;
    max-width: 100%;
}

/*=====  End of images  ======*/
